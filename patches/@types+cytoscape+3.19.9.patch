diff --git a/node_modules/@types/cytoscape/index.d.ts b/node_modules/@types/cytoscape/index.d.ts
index 647a82b..b5daacb 100644
--- a/node_modules/@types/cytoscape/index.d.ts
+++ b/node_modules/@types/cytoscape/index.d.ts
@@ -69,7 +69,7 @@
 export = cytoscape;
 export as namespace cytoscape;
 
-declare function cytoscape(options?: cytoscape.CytoscapeOptions): cytoscape.Core;
+declare function cytoscape<CustomDataNode = any>(options?: cytoscape.CytoscapeOptions<CustomDataNode>): cytoscape.Core<CustomDataNode>;
 declare function cytoscape(type: string, name: string): unknown;
 declare function cytoscape(type: string, name: string, registrant: any): void;
 
@@ -81,9 +81,9 @@ declare namespace cytoscape {
 
     type CssStyleDeclaration = any;
 
-    interface ElementDefinition {
+    interface ElementDefinition<CustomDataNode = any> {
         group?: ElementGroup | undefined;
-        data: NodeDataDefinition | EdgeDataDefinition;
+        data: NodeDataDefinition<CustomDataNode> | EdgeDataDefinition;
         /**
          * Scratchpad data (usually temp or nonserialisable data)
          */
@@ -153,17 +153,22 @@ declare namespace cytoscape {
         [key: string]: any;
     }
 
-    interface NodeDefinition extends ElementDefinition {
-        data: NodeDataDefinition;
+    interface NodeDefinition<CustomDataNode = any> extends ElementDefinition {
+        data: NodeDataDefinition<CustomDataNode>;
     }
 
-    interface NodeDataDefinition extends ElementDataDefinition {
+    type NodeDataDefinition<CustomDataNode = any> = {
         id?: string | undefined;
         parent?: string | undefined;
-        [key: string]: any;
-    }
+    } & CustomDataNode;
+
+    // interface NodeDataDefinition<CustomDataNode = any> extends ElementDataDefinition {
+    //   id?: string | undefined;
+    //   parent?: string | undefined;
+    //   [key: string]: any;
+    // }
 
-    interface CytoscapeOptions {
+    interface CytoscapeOptions<CustomDataNode = any> {
         ///////////////////////////////////////
         // very commonly used options:
         /**
@@ -178,11 +183,11 @@ declare namespace cytoscape {
          * An array of [[Elements]] specified as plain objects. For convenience, this option can alternatively be specified as a promise that resolves to the elements JSON.
          */
         elements?:
-            | ElementsDefinition
-            | ElementDefinition[]
-            | Promise<ElementsDefinition>
-            | Promise<ElementDefinition[]>
-            | undefined;
+            ElementsDefinition<CustomDataNode>
+            // | ElementDefinition<CustomDataNode>[]
+            // | Promise<ElementsDefinition<CustomDataNode>>
+            // | Promise<ElementDefinition<CustomDataNode>[]>
+            // | undefined;
         /**
          * The [[Stylesheet]] used to style the graph. For convenience, this option can alternatively be specified as a promise that resolves to the stylesheet.
          */
@@ -394,12 +399,12 @@ declare namespace cytoscape {
      * All of the libraryâ€™s features are accessed through this object.
      * http://js.cytoscape.org/#core
      */
-    interface Core
-        extends CoreGraphManipulation,
-            CoreData,
+    interface Core<CustomDataNode = any>
+        extends CoreGraphManipulation<CustomDataNode>,
+            CoreData<CustomDataNode>,
             CoreGraphManipulationExt,
             CoreEvents,
-            CoreViewportManipulation,
+            CoreViewportManipulation<CustomDataNode>,
             CoreAnimation,
             CoreLayout,
             CoreStyle,
@@ -410,12 +415,12 @@ declare namespace cytoscape {
      *
      * http://js.cytoscape.org/#core/graph-manipulation
      */
-    interface CoreGraphManipulation {
+    interface CoreGraphManipulation<CustomDataNode = any> {
         /**
          * Add elements to the graph and return them.
          */
         add(
-            eles: ElementDefinition | ElementDefinition[] | ElementsDefinition | CollectionArgument,
+            eles: ElementDefinition<CustomDataNode> | ElementDefinition<CustomDataNode>[] | ElementsDefinition<CustomDataNode> | CollectionArgument,
         ): CollectionReturnValue;
 
         /**
@@ -461,7 +466,7 @@ declare namespace cytoscape {
         /**
          * Get nodes in the graph matching the specified selector.
          */
-        nodes(selector?: Selector): NodeCollection;
+        nodes(selector?: Selector): NodeCollection<CustomDataNode>;
 
         /**
          * Get edges in the graph matching the specified selector.
@@ -532,7 +537,7 @@ declare namespace cytoscape {
     /**
      * https://js.cytoscape.org/#core/data
      */
-    interface CoreData {
+    interface CoreData<CustomDataNode = any> {
         /**
          * Read and write developer-defined data associated with the graph.
          * http://js.cytoscape.org/#cy.data
@@ -543,7 +548,9 @@ declare namespace cytoscape {
          *
          * @param name The name of the field to get.
          */
-        data(name?: string): any;
+        // data(name?: string): any; //gbo TODO
+        data(name: keyof CustomDataNode): CustomDataNode[typeof name];
+        data(): CustomDataNode;
         /**
          * Set a particular data field.
          * @alias attr
@@ -765,7 +772,7 @@ declare namespace cytoscape {
     /**
      * http://js.cytoscape.org/#core/viewport-manipulation
      */
-    interface CoreViewportManipulation {
+    interface CoreViewportManipulation<CustomDataNode = any> {
         /**
          * Get the HTML DOM element in which the graph is visualised.
          * A null value is returned if the Core is headless.
@@ -1308,10 +1315,10 @@ declare namespace cytoscape {
      * The input can be any element (node and edge) collection.
      * http://js.cytoscape.org/#collection
      */
-    interface Collection<TOut = SingularElementReturnValue, TIn = SingularElementArgument>
-        extends CollectionGraphManipulation,
+    interface Collection<TOut = SingularElementReturnValue, TIn = SingularElementArgument, CustomDataNode = {collectio: string;}>
+        extends CollectionGraphManipulation<CustomDataNode>,
             CollectionEvents,
-            CollectionData,
+            CollectionData<CustomDataNode>,
             CollectionPosition,
             CollectionTraversing,
             CollectionLayout,
@@ -1328,8 +1335,8 @@ declare namespace cytoscape {
      * a collection of a single element (node or edge)
      * NB: every singular collection is a general collection too (but not vice versa)!
      */
-    interface Singular<TOut = SingularElementReturnValue, TIn = SingularElementArgument>
-        extends Collection<TOut, TIn>,
+    interface Singular<TOut = SingularElementReturnValue, TIn = SingularElementArgument, CustomDataNode = any>
+        extends Collection<TOut, TIn, CustomDataNode>,
             SingularGraphManipulation,
             SingularData,
             SingularPosition,
@@ -1337,8 +1344,8 @@ declare namespace cytoscape {
             SingularStyle,
             SingularAnimation {}
 
-    interface ElementsDefinition {
-        nodes: NodeDefinition[];
+    interface ElementsDefinition<CustomDataNode = any> {
+        nodes: NodeDefinition<CustomDataNode>[];
         edges: EdgeDefinition[];
     }
 
@@ -1356,15 +1363,15 @@ declare namespace cytoscape {
      *
      * The output is a collection of edge elements OR single edge.
      */
-    interface EdgeCollection extends Collection<EdgeSingular, EdgeSingular>, EdgeCollectionTraversing {}
+    interface EdgeCollection<CustomDataNode = any> extends Collection<EdgeSingular<CustomDataNode>, EdgeSingular<CustomDataNode>, CustomDataNode>, EdgeCollectionTraversing {}
     /**
      *  nodes -> Cy.NodeCollection
      *  a collection of one or more nodes
      *
      * The output is a collection of node elements OR single node.
      */
-    interface NodeCollection
-        extends Collection<NodeSingular, NodeSingular>,
+    interface NodeCollection<CustomDataNode = any>
+        extends Collection<NodeSingular<CustomDataNode>, NodeSingular<CustomDataNode>, CustomDataNode>,
             NodeCollectionMetadata,
             NodeCollectionPosition,
             NodeCollectionTraversing,
@@ -1377,9 +1384,9 @@ declare namespace cytoscape {
      *  edge --> Cy.EdgeSingular
      *  a collection of a single edge
      */
-    interface EdgeSingular
-        extends Singular<EdgeSingular, EdgeSingular>,
-            EdgeCollection,
+    interface EdgeSingular<CustomDataNode = any>
+        extends Singular<EdgeSingular<CustomDataNode>, EdgeSingular<CustomDataNode>, CustomDataNode>,
+            EdgeCollection<CustomDataNode>,
             EdgeSingularData,
             EdgeSingularPoints,
             EdgeSingularTraversing {}
@@ -1388,9 +1395,9 @@ declare namespace cytoscape {
      *  node --> Cy.NodeSingular
      *  a collection of a single node
      */
-    interface NodeSingular
-        extends Singular<NodeSingular, NodeSingular>,
-            NodeCollection,
+    interface NodeSingular<CustomDataNode = any>
+        extends Singular<NodeSingular<CustomDataNode>, NodeSingular<CustomDataNode>, CustomDataNode>,
+            NodeCollection<CustomDataNode>,
             NodeSingularMetadata,
             NodeSingularPosition,
             NodeSingularCompound,
@@ -1399,7 +1406,7 @@ declare namespace cytoscape {
     /**
      * http://js.cytoscape.org/#collection/graph-manipulation
      */
-    interface CollectionGraphManipulation {
+    interface CollectionGraphManipulation<CustomDataNode = any> {
         /**
          * Remove the elements from the graph.
          * http://js.cytoscape.org/#eles.remove
@@ -1526,7 +1533,7 @@ declare namespace cytoscape {
      * source & target : These fields define an edge's relationship to nodes, and this relationship can not be changed after creation.
      * parent: The parent field defines the parent (compound) node.
      */
-    interface CollectionData {
+    interface CollectionData<CustomDataNode = any> {
         /**
          * Read and write developer-defined data associated with the elements
          * http://js.cytoscape.org/#eles.data
@@ -1536,7 +1543,9 @@ declare namespace cytoscape {
          * Get a particular data field for the element.
          * @param name The name of the field to get.
          */
-        data(name?: string): any;
+        data(name: keyof CustomDataNode): CustomDataNode[keyof CustomDataNode];
+        data(): CustomDataNode;
+
         /**
          * Set a particular data field for the element.
          * @param name The name of the field to set.
@@ -1547,7 +1556,7 @@ declare namespace cytoscape {
          * Update multiple data fields at once via an object.
          * @param obj The object containing name- value pairs to update data fields.
          */
-        data(obj: any): this;
+        // data(obj: Partial<CustomDataNode>): this;
         /**
          * Get a particular data field for the element.
          * @param name The name of the field to get.
